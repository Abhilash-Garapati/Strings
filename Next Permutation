class Solution 
{
    void nextPermutation(int[] arr) 
    {
        // code here
        int n = arr.length;
        int i = n-2;
          // Step 1: Find first decreasing element from right
        while(i>=0 && arr[i]>=arr[i+1])
        {
            i--;
        }
        if(i>=0)
        {
            // Step 2: Find element just larger than arr[i]
            int j = arr.length-1;
            while(arr[j]<=arr[i])
            {
                j--;
            }
            // Step 3: Swap them
            swap(arr,i,j);
        }
        // Step 4: Reverse suffix after i
        reverse(arr,i+1,n-1);
    }
    void swap(int [] arr, int left, int right)
    {
        int temp = arr[left];
        arr[left] = arr[right];
        arr[right] = temp;
    }
    void reverse(int arr[], int left, int right)
    {
        while(left<right)
        {
            swap(arr,left,right);
            left++;
            right--;
        }
    }
}
